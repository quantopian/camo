steps:
  # Build the camo container
  - label: ":docker: docker build"
    plugins:
      - docker-compose#v3.3.0:
          build:
            - camo
          image-repository: 997938224961.dkr.ecr.us-east-1.amazonaws.com/camo
          # n.b. - only the first cache found is used
          cache-from:
            - camo:997938224961.dkr.ecr.us-east-1.amazonaws.com/camo:${BUILDKITE_BRANCH}
            - camo:997938224961.dkr.ecr.us-east-1.amazonaws.com/camo:latest
          push:
            - camo:997938224961.dkr.ecr.us-east-1.amazonaws.com/camo:latest
            - camo:997938224961.dkr.ecr.us-east-1.amazonaws.com/camo:${BUILDKITE_BRANCH}
            - camo:997938224961.dkr.ecr.us-east-1.amazonaws.com/camo:${BUILDKITE_COMMIT}

  # TODO: upstream testing is all sorts of broken, maybe we should write our own / fix them?

  - wait:

  # Publish updated helm chart, if necessary
  - label: ":helm: publish helm chart"
    plugins:
      - ssh://git@github.com/quantopian/helm-chart-buildkite-plugin.git#v0.1.3:
          chart_path: helm-chart/camo
          metadata_key: chartversion
    branches:
      - master
      - production-deployed
    concurrency: 1
    concurrency_group: "helm-chart/${BUILDKITE_PIPELINE_SLUG}"

  - wait:

  - label: ":git: Bump chart and image version in qbernetes helmfile"
    plugins:
      - acloudguru/metadata-env:
          keys:
          - chartversion=BUILDKITE_CHART_VERSION
      - ssh://git@github.com/quantopian/version-bumper-buildkite-plugin.git#v1.0.5:
          repo_name: qbernetes
          repo_branch: master
          yaml_files:
            - helm/helmfile/qf-ssl-proxy/values/production.yaml
          chart_paths:
            - chartVersion
          version_paths:
            - metadata_service.image.tag
          set_version: ${BUILDKITE_COMMIT}
      - ssh://git@github.com/quantopian/git-commit-buildkite-plugin.git#v0.5.4:
          add: helm/helmfile/*/values/*production.yaml
          branch: version-bumper-${BUILDKITE_PIPELINE_SLUG}-$BUILDKITE_BUILD_NUMBER
          create-branch: true
          message: "Version Bump [$BUILDKITE_BUILD_NUMBER]"
          pull-request: true
          pull-request-labels: versionbump
          pull-request-message: "Version Bump [$BUILDKITE_PIPELINE_SLUG build $BUILDKITE_BUILD_NUMBER]"
    branches: production-deployed
    concurrency: 1
    concurrency_group: "version-bumper/qbernetes/${BUILDKITE_PIPELINE_SLUG}"

  - label: ":git: Bump chart and image version in qbernetes helmfile"
    plugins:
      - acloudguru/metadata-env:
          keys:
          - chartversion=BUILDKITE_CHART_VERSION
      - ssh://git@github.com/quantopian/version-bumper-buildkite-plugin.git#v1.0.5:
          repo_name: qbernetes
          repo_branch: master
          yaml_files:
            - helm/helmfile/qf-ssl-proxy/values/staging.yaml
          version_paths:
            - metadata_service.image.tag
          chart_paths:
            - chartVersion
          set_version: ${BUILDKITE_COMMIT}
      - ssh://git@github.com/quantopian/git-commit-buildkite-plugin.git#v0.5.4:
          add: helm/helmfile/*/values/staging.yaml
          branch: version-bumper-${BUILDKITE_PIPELINE_SLUG}-$BUILDKITE_BUILD_NUMBER
          create-branch: true
          message: "Version Bump [$BUILDKITE_BUILD_NUMBER]"
          pull-request: true
          pull-request-labels: versionbump
          pull-request-message: "Version Bump [$BUILDKITE_PIPELINE_SLUG build $BUILDKITE_BUILD_NUMBER]"
    branches: master
    concurrency: 1
    concurrency_group: "version-bumper/qbernetes/${BUILDKITE_PIPELINE_SLUG}"

  - wait:

  # Deploy camo to staging.
  - label: ":argo: Deploy to qbernetes"
    plugins:
      - ssh://git@github.com/quantopian/argocd-buildkite-plugin.git:
          argocd_server: argocd.stg.int.dynoquant.com
    branches: master
    concurrency: 1
    concurrency_group: "${BUILDKITE_PIPELINE_SLUG}/deploy-staging/qbernetes"

  # Deploy to production.
  - label: ":argo: Deploy to qbernetes"
    plugins:
      - ssh://git@github.com/quantopian/argocd-buildkite-plugin.git:
          argocd_server: argocd.prd.int.dynoquant.com
    branches: production-deployed
    concurrency: 1
    concurrency_group: "${BUILDKITE_PIPELINE_SLUG}/deploy-production/qbernetes"
